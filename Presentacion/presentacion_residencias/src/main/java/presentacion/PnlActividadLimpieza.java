package presentacion;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import control.ControlActividadesLimpieza;
import dto.ActividadLimpiezaDTO;
import dto.PersonalDTO;
import dto.ZonaDTO;
import excepciones.NegocioException;

/**
 * Panel que muestra los detalles de una actividad de limpieza y permite
 * eliminarla.
 * Muestra informacion como la zona, personal asignado, fecha de inicio y fin, y
 * ofrece
 * un boton para eliminar la actividad tras confirmacion del usuario.
 */
public class PnlActividadLimpieza extends javax.swing.JPanel {

    /**
     * Objeto que contiene los datos de la actividad de limpieza a mostrar.
     */
    private ActividadLimpiezaDTO actividadLimpiezaDTO;

    /**
     * Crea un nuevo panel PnlActividadLimpieza.
     * Inicializa los componentes de la interfaz y carga la informacion de la
     * actividad.
     * 
     * @param actividadLimpiezaDTO Objeto con los datos de la actividad de limpieza
     */
    public PnlActividadLimpieza(ActividadLimpiezaDTO actividadLimpiezaDTO) {
        this.actividadLimpiezaDTO = actividadLimpiezaDTO;
        initComponents();
        cargarInfo();
    }

    /**
     * Carga la informacion de la actividad de limpieza en los campos de la
     * interfaz.
     * Obtiene los detalles de la zona y el personal asignado desde el controlador,
     * y formatea
     * las fechas de inicio y fin. Muestra un mensaje de error si falla la carga de
     * datos.
     */
    private void cargarInfo() {
        ZonaDTO zona = actividadLimpiezaDTO.getZona();
        lblZona.setText(zona.getNombre() + " - Piso " + zona.getPiso());
        PersonalDTO personal = actividadLimpiezaDTO.getPersonal();
        lblPersonal.setText(personal.getNombre());
        lblFechaInicio.setText(parsearFecha(actividadLimpiezaDTO.getFechaInicio()));
        lblFechaFin.setText(parsearFecha(actividadLimpiezaDTO.getFechaFin()));

    }

    /**
     * Convierte una fecha a un formato legible (dd/MM/yyyy HH:mm).
     * 
     * @param fecha Fecha a formatear
     * @return Cadena con la fecha formateada
     */
    private String parsearFecha(Date fecha) {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        return formato.format(fecha);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblZona = new javax.swing.JLabel();
        lblPersonal = new javax.swing.JLabel();
        lblFechaInicio = new javax.swing.JLabel();
        lblFechaFin = new javax.swing.JLabel();
        btnBorrar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setMaximumSize(new java.awt.Dimension(808, 65));
        setMinimumSize(new java.awt.Dimension(808, 65));
        setPreferredSize(new java.awt.Dimension(808, 65));
        setRequestFocusEnabled(false);

        lblZona.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblZona.setText("Zona");
        lblZona.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblZona.setForeground(new java.awt.Color(0, 0, 0));

        lblPersonal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonal.setText("Personal Asignado");
        lblPersonal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPersonal.setForeground(new java.awt.Color(0, 0, 0));

        lblFechaInicio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFechaInicio.setText("Fecha Inicio");
        lblFechaInicio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFechaInicio.setForeground(new java.awt.Color(0, 0, 0));

        lblFechaFin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFechaFin.setText("Fecha Fin");
        lblFechaFin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFechaFin.setForeground(new java.awt.Color(0, 0, 0));

        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Frame 1.png"))); // NOI18N
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblZona, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 170,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 178,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 176,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33,
                                        Short.MAX_VALUE)
                                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 55,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblZona, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                        .addComponent(lblPersonal, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)
                        .addComponent(lblFechaInicio, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)
                        .addComponent(lblFechaFin, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)
                        .addComponent(btnBorrar, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE));
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Maneja el evento del boton Borrar.
     * Solicita confirmacion al usuario para eliminar la actividad de limpieza, la
     * elimina
     * mediante el controlador, cierra la ventana de actividades y reinicia el
     * flujo.
     * Muestra mensajes de exito o error segun corresponda.
     * 
     * @param evt Evento de accion del boton
     */
    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBorrarActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar esta actividad?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            try {
                ControlActividadesLimpieza control = ControlActividadesLimpieza.getInstance();
                control.eliminarActividad(actividadLimpiezaDTO);
                JOptionPane.showMessageDialog(this, "Actividad eliminada correctamente.", "Éxito",
                        JOptionPane.INFORMATION_MESSAGE);
                control.cerrarVentanaActividadesLimpieza();
                control.iniciarFlujo();
            } catch (NegocioException e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar la actividad: " + e.getMessage(), "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }// GEN-LAST:event_btnBorrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JLabel lblFechaFin;
    private javax.swing.JLabel lblFechaInicio;
    private javax.swing.JLabel lblPersonal;
    private javax.swing.JLabel lblZona;
    // End of variables declaration//GEN-END:variables
}
