package presentacion;

import java.time.Instant;
import java.util.Comparator;
import java.util.List;

import control.ControlActividadesLimpieza;
import dto.ActividadLimpiezaDTO;
import dto.PersonalDTO;
import dto.ZonaDTO;
import excepciones.NegocioException;
import itson.negocios_administradorpersonal.AdministradorPersonalFachada;
import itson.negocios_administradorpersonal.IAdministradorPersonal;
import itson.negocios_administradorzonas.AdministradorZonasFachada;
import itson.negocios_administradorzonas.IAdministradorZonas;

/**
 * Ventana para gestionar actividades de limpieza.
 * Muestra una lista de actividades, permite filtrarlas por zona, personal o
 * fecha,
 * y ofrece opciones para registrar nuevas actividades o volver al menu
 * principal.
 * Extiende JFrameBase para heredar propiedades comunes de ventanas.
 * 
 * @author pc
 */
public class FrmActividadesLimpieza extends JFrameBase {

    /**
     * Controlador para gestionar la logica de actividades de limpieza.
     */
    private ControlActividadesLimpieza controlActividadesLimpieza;

    /**
     * Crea una nueva ventana FrmActividadesLimpieza.
     * Inicializa los componentes de la interfaz y carga la lista inicial de
     * actividades.
     * 
     * @param controlActividadesLimpieza Controlador asociado para la logica de
     *                                   negocio
     */
    public FrmActividadesLimpieza(ControlActividadesLimpieza controlActividadesLimpieza) {
        this.controlActividadesLimpieza = controlActividadesLimpieza;
        initComponents();
        cargarActividades();
    }

    /**
     * Carga todas las actividades de limpieza en el panel correspondiente.
     * Limpia el panel actual y agrega un componente PnlActividadLimpieza para cada
     * actividad.
     */
    private void cargarActividades() {
        this.boxPnlActividades.removeAll();
        this.boxPnlActividades.revalidate();
        this.boxPnlActividades.repaint();
        List<ActividadLimpiezaDTO> actividades = this.controlActividadesLimpieza.obtenerActividades();
        for (ActividadLimpiezaDTO actividad : actividades) {
            PnlActividadLimpieza pnlActividad = new PnlActividadLimpieza(actividad);
            this.boxPnlActividades.add(pnlActividad);
        }
    }

    /**
     * Carga todas las actividades de limpieza en el panel correspondiente.
     * Limpia el panel actual y agrega un componente PnlActividadLimpieza para cada
     * actividad.
     */
    private void cargarActividades(List<ActividadLimpiezaDTO> actividades) {
        this.boxPnlActividades.removeAll();
        this.boxPnlActividades.revalidate();
        this.boxPnlActividades.repaint();
        for (ActividadLimpiezaDTO actividad : actividades) {
            PnlActividadLimpieza pnlActividad = new PnlActividadLimpieza(actividad);
            this.boxPnlActividades.add(pnlActividad);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        panelInfo2 = new javax.swing.JPanel();
        pnlTitulos = new javax.swing.JPanel();
        lblZona = new javax.swing.JLabel();
        lblPersonal = new javax.swing.JLabel();
        lblInicio = new javax.swing.JLabel();
        lblFin = new javax.swing.JLabel();
        lblBorrar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        boxPnlActividades = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblLogoResi = new javax.swing.JLabel();
        pnlLinea4 = new javax.swing.JPanel();
        btnRegistrarNuevaActividad = new javax.swing.JButton();
        lblZona1 = new javax.swing.JLabel();
        comboBoxFiltro = new javax.swing.JComboBox<>();
        btnVolver = new javax.swing.JButton();
        checkBoxAntiguas = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(27, 44, 87));

        panelInfo2.setBackground(new java.awt.Color(255, 255, 255));
        panelInfo2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnlTitulos.setBackground(new java.awt.Color(255, 255, 255));
        pnlTitulos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblZona.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblZona.setForeground(new java.awt.Color(0, 0, 0));
        lblZona.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblZona.setText("Zona");

        lblPersonal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPersonal.setForeground(new java.awt.Color(0, 0, 0));
        lblPersonal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonal.setText("Personal Asignado");

        lblInicio.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblInicio.setForeground(new java.awt.Color(0, 0, 0));
        lblInicio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInicio.setText("Inicio");

        lblFin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblFin.setForeground(new java.awt.Color(0, 0, 0));
        lblFin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFin.setText("Fin");

        lblBorrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblBorrar.setForeground(new java.awt.Color(0, 0, 0));
        lblBorrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBorrar.setText("Borrar");

        javax.swing.GroupLayout pnlTitulosLayout = new javax.swing.GroupLayout(pnlTitulos);
        pnlTitulos.setLayout(pnlTitulosLayout);
        pnlTitulosLayout.setHorizontalGroup(
            pnlTitulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitulosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblZona, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFin, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        pnlTitulosLayout.setVerticalGroup(
            pnlTitulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitulosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlTitulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZona)
                    .addComponent(lblPersonal)
                    .addComponent(lblInicio)
                    .addComponent(lblFin)
                    .addComponent(lblBorrar))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        boxPnlActividades.setBackground(new java.awt.Color(255, 255, 255));
        boxPnlActividades.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        boxPnlActividades.setLayout(new javax.swing.BoxLayout(boxPnlActividades, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(boxPnlActividades);

        javax.swing.GroupLayout panelInfo2Layout = new javax.swing.GroupLayout(panelInfo2);
        panelInfo2.setLayout(panelInfo2Layout);
        panelInfo2Layout.setHorizontalGroup(
            panelInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTitulos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        panelInfo2Layout.setVerticalGroup(
            panelInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfo2Layout.createSequentialGroup()
                .addComponent(pnlTitulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lblTitulo.setFont(new java.awt.Font("Apple LiGothic", 0, 48)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(245, 253, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitulo.setText("Actividades de limpieza");
        lblTitulo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        lblLogoResi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Logotipo Residencias Estudiantiles Horizontal.png"))); // NOI18N

        pnlLinea4.setBackground(new java.awt.Color(204, 255, 255));
        pnlLinea4.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout pnlLinea4Layout = new javax.swing.GroupLayout(pnlLinea4);
        pnlLinea4.setLayout(pnlLinea4Layout);
        pnlLinea4Layout.setHorizontalGroup(
            pnlLinea4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 554, Short.MAX_VALUE)
        );
        pnlLinea4Layout.setVerticalGroup(
            pnlLinea4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        btnRegistrarNuevaActividad.setBackground(new java.awt.Color(107, 225, 251));
        btnRegistrarNuevaActividad.setForeground(new java.awt.Color(37, 55, 95));
        btnRegistrarNuevaActividad.setText("Registrar Nueva Actividad");
        btnRegistrarNuevaActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarNuevaActividadActionPerformed(evt);
            }
        });

        lblZona1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblZona1.setForeground(new java.awt.Color(255, 255, 255));
        lblZona1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblZona1.setText("Filtrar Por:");

        comboBoxFiltro.setBackground(new java.awt.Color(255, 255, 255));
        comboBoxFiltro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboBoxFiltro.setForeground(new java.awt.Color(0, 0, 0));
        comboBoxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Zona", "Personal Asignado", "Fecha" }));
        comboBoxFiltro.setFocusable(false);
        comboBoxFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxFiltroItemStateChanged(evt);
            }
        });

        btnVolver.setBackground(new java.awt.Color(37, 55, 95));
        btnVolver.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        checkBoxAntiguas.setBackground(new java.awt.Color(27, 44, 87));
        checkBoxAntiguas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkBoxAntiguas.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxAntiguas.setSelected(true);
        checkBoxAntiguas.setText("Mostrar actividades antiguas");
        checkBoxAntiguas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxAntiguasItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lblLogoResi, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlLinea4, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(lblTitulo)
                        .addGap(20, 20, 20))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(panelInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(lblZona1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(58, 58, 58)
                            .addComponent(btnRegistrarNuevaActividad, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(checkBoxAntiguas, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 66, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLogoResi, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblTitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlLinea4, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(checkBoxAntiguas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRegistrarNuevaActividad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblZona1))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Maneja el evento de cambio en el comboBox de filtros.
     * Filtra las actividades segun la opcion seleccionada (zona, personal o fecha)
     * y actualiza el panel con las actividades filtradas.
     * 
     * @param evt Evento de cambio de estado del comboBox
     */
    private void comboBoxFiltroItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_comboBoxFiltroItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            String filtro = (String) comboBoxFiltro.getSelectedItem();
            List<ActividadLimpiezaDTO> actividadesFiltradas = filtrarActividades(filtro);
            cargarActividades(actividadesFiltradas);
        }
    }// GEN-LAST:event_comboBoxFiltroItemStateChanged

    /**
     * Filtra las actividades de limpieza segun el criterio especificado.
     * Solo muestra actividades de hoy o futuras, ordenadas por zona, personal o
     * fecha.
     * 
     * @param filtro Criterio de filtrado ("Zona", "Personal Asignado", "Fecha" o
     *               "Seleccionar")
     * @return Lista de DTOs de actividades filtradas y ordenadas
     */
    private List<ActividadLimpiezaDTO> filtrarActividades(String filtro) {
        ControlActividadesLimpieza controlActividadesLimpieza = ControlActividadesLimpieza.getInstance();
        List<ActividadLimpiezaDTO> actividadesFiltradas = controlActividadesLimpieza.obtenerActividades();

        // Filtrar actividades para mostrar solo las que son de hoy o futuras
        if (!checkBoxAntiguas.isSelected()) {
            actividadesFiltradas.removeIf(actividad -> actividad.getFechaFin().toInstant().isBefore(Instant.now()));
        }

        switch (filtro) {
            case "Zona":
                // Ordenar alfabéticamente por el nombre de la zona
                IAdministradorZonas adminZonas = new AdministradorZonasFachada();
                actividadesFiltradas.sort(Comparator.comparing(actividad -> {
                    String nombreZona;
                    try {
                        nombreZona = adminZonas.obtenerZona(actividad.getZona()).getNombre();
                        return nombreZona != null ? nombreZona : "";
                    } catch (NegocioException e) {
                        e.printStackTrace();
                    }
                    return "";
                }));
                break;

            case "Personal Asignado":
                // Ordenar alfabéticamente por el nombre del personal asignado
                IAdministradorPersonal adminPersonal = new AdministradorPersonalFachada();
                actividadesFiltradas.sort(Comparator.comparing(actividad -> {
                    String nombrePersonal;
                    try {
                        nombrePersonal = adminPersonal.obtenerPersonal(actividad.getPersonal())
                                .getNombre();
                        return nombrePersonal != null ? nombrePersonal : "";
                    } catch (NegocioException e) {
                        e.printStackTrace();
                    }
                    return "";
                }));
                break;

            case "Fecha":
                // Ordenar de menor a mayor por fecha de inicio
                actividadesFiltradas.sort(Comparator.comparing(ActividadLimpiezaDTO::getFechaInicio));
                break;

            default:
                return actividadesFiltradas;
        }

        return actividadesFiltradas;
    }

    /**
     * Maneja el evento del boton para registrar una nueva actividad.
     * Abre la ventana de registro de actividades y cierra la ventana actual.
     * 
     * @param evt Evento de accion del boton
     */
    private void btnRegistrarNuevaActividadActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRegistrarNuevaActividadActionPerformed
        this.controlActividadesLimpieza.abrirRegistrarActividad();
        this.dispose();
    }// GEN-LAST:event_btnRegistrarNuevaActividadActionPerformed

    /**
     * Maneja el evento del boton para volver al menu principal.
     * Finaliza el caso de uso y cierra la ventana actual.
     * 
     * @param evt Evento de accion del boton
     */
    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnVolverActionPerformed
        this.controlActividadesLimpieza.acabarCaso();
        this.dispose();
    }// GEN-LAST:event_btnVolverActionPerformed

    private void checkBoxAntiguasItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_checkBoxAntiguasItemStateChanged
            String filtro = (String) comboBoxFiltro.getSelectedItem();

            List<ActividadLimpiezaDTO> actividadesFiltradas = filtrarActividades(filtro);
            cargarActividades(actividadesFiltradas);
        
    }// GEN-LAST:event_checkBoxAntiguasItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boxPnlActividades;
    private javax.swing.JButton btnRegistrarNuevaActividad;
    private javax.swing.JButton btnVolver;
    private javax.swing.JCheckBox checkBoxAntiguas;
    private javax.swing.JComboBox<String> comboBoxFiltro;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBorrar;
    private javax.swing.JLabel lblFin;
    private javax.swing.JLabel lblInicio;
    private javax.swing.JLabel lblLogoResi;
    private javax.swing.JLabel lblPersonal;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblZona;
    private javax.swing.JLabel lblZona1;
    private javax.swing.JPanel panelInfo2;
    private javax.swing.JPanel pnlLinea4;
    private javax.swing.JPanel pnlTitulos;
    // End of variables declaration//GEN-END:variables
}
