package presentacion;

import control.ControlActualizarResidente;
import control.ControlAltaResidente;
import dto.ResidenteDTO;
import javax.swing.JOptionPane;

/**
 * Ventana para ingresar el ID de un estudiante y obtener su informacion para el proceso de alta en residencias.
 * Valida la matricula, verifica si el estudiante ya esta registrado y muestra su informacion si es valido.
 * Permite volver al menu principal. Extiende JFrameBase para heredar propiedades comunes de ventanas.
 */
public class FrmIngresarIDEstudiante extends JFrameBase {
    private static int tipoFormulario; // 0 = alta, 1 = actualizar
    /**
     * Controlador para gestionar la logica de alta de residentes.
     */ 
    private Object control;

    public FrmIngresarIDEstudiante(Object control, int tipo) {
        super();
        this.control = control;
        tipoFormulario = tipo;
        initComponents();
    }

    public void limpiarCampoTextoID() {
        campoTextoID.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAsignarHabitaciones = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        campoTextoID = new javax.swing.JTextField();
        btnMenu = new javax.swing.JButton();
        btnObtenerInformacion = new javax.swing.JButton();
        labelID = new javax.swing.JLabel();
        lblIngresaIDEstudiante = new javax.swing.JLabel();
        lblLogoCIA = new javax.swing.JLabel();
        lblLogoResi = new javax.swing.JLabel();
        pnlLinea4 = new javax.swing.JPanel();

        btnAsignarHabitaciones.setBackground(new java.awt.Color(37, 55, 95));
        btnAsignarHabitaciones.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAsignarHabitaciones.setForeground(new java.awt.Color(112, 222, 255));
        btnAsignarHabitaciones.setText("Asignar Habitaciones");
        btnAsignarHabitaciones.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(112, 222, 255), 1, true));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(228, 233, 236));

        jPanel1.setBackground(new java.awt.Color(27, 44, 87));

        campoTextoID.setFont(new java.awt.Font("Toppan Bunkyu Midashi Gothic", 1, 24)); // NOI18N
        campoTextoID.setForeground(new java.awt.Color(66, 136, 206));

        btnMenu.setBackground(new java.awt.Color(52, 47, 51));
        btnMenu.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        btnMenu.setForeground(new java.awt.Color(250, 250, 250));
        btnMenu.setText("Volver al Menú");
        btnMenu.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnObtenerInformacion.setBackground(new java.awt.Color(37, 55, 95));
        btnObtenerInformacion.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        btnObtenerInformacion.setForeground(new java.awt.Color(112, 222, 255));
        btnObtenerInformacion.setText("Obtener información");
        btnObtenerInformacion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(112, 222, 255), 1, true));
        btnObtenerInformacion.setBorderPainted(false);
        btnObtenerInformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObtenerInformacionActionPerformed(evt);
            }
        });

        labelID.setFont(new java.awt.Font("Toppan Bunkyu Midashi Gothic", 1, 18)); // NOI18N
        labelID.setForeground(new java.awt.Color(102, 102, 102));
        labelID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelID.setText("ID estudiante:");
        labelID.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(btnObtenerInformacion, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelID)
                            .addComponent(campoTextoID, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(labelID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoTextoID, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObtenerInformacion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        lblIngresaIDEstudiante.setFont(new java.awt.Font("Apple LiGothic", 0, 48)); // NOI18N
        lblIngresaIDEstudiante.setForeground(new java.awt.Color(245, 253, 255));
        lblIngresaIDEstudiante.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblIngresaIDEstudiante.setText("Ingresa el ID del estudiante");
        lblIngresaIDEstudiante.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        lblLogoCIA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CIA.png"))); // NOI18N

        lblLogoResi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Logotipo Residencias Estudiantiles Horizontal.png"))); // NOI18N

        pnlLinea4.setBackground(new java.awt.Color(204, 255, 255));
        pnlLinea4.setPreferredSize(new java.awt.Dimension(0, 2));

        javax.swing.GroupLayout pnlLinea4Layout = new javax.swing.GroupLayout(pnlLinea4);
        pnlLinea4.setLayout(pnlLinea4Layout);
        pnlLinea4Layout.setHorizontalGroup(
            pnlLinea4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 554, Short.MAX_VALUE)
        );
        pnlLinea4Layout.setVerticalGroup(
            pnlLinea4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        //:3
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblLogoCIA, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(244, 244, 244))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlLinea4, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIngresaIDEstudiante)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(lblLogoResi, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lblLogoResi, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(pnlLinea4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(lblIngresaIDEstudiante)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(lblLogoCIA, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Maneja el evento del boton Volver al Menu.
     * Finaliza el caso de uso actual y regresa al menu principal.
     * @param evt Evento de accion del boton
     */
    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed

        if (tipoFormulario == 0 && control instanceof ControlAltaResidente) {
            ((ControlAltaResidente) control).acabarCaso();
        } else if (tipoFormulario == 1 && control instanceof ControlActualizarResidente) {
            ((ControlActualizarResidente) control).acabarCaso();
        } else {
            System.out.println("Error: Controlador no válido para tipoFormulario " + tipoFormulario);
        }
    }//GEN-LAST:event_btnMenuActionPerformed

    /**
     * Maneja el evento del boton Obtener Informacion.
     * Valida la matricula ingresada, verifica si el estudiante ya esta registrado en residencias
     * y, si no lo esta, obtiene su informacion desde el sistema CIA para mostrarla.
     * Muestra un mensaje de error si la matricula es invalida o si el estudiante ya esta registrado.
     * @param evt Evento de accion del boton
     */
    private void btnObtenerInformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObtenerInformacionActionPerformed

        String matricula = this.campoTextoID.getText().trim();
        try {
            if (matricula.isEmpty()) {
                throw new Exception("Asegúrese de ingresar la matrícula");
            }
            if (control == null) {
                throw new Exception("Error interno: Controlador no inicializado");
            }

            ResidenteDTO residente = null;
            if (tipoFormulario == 0) { // Alta Residente
                System.out.println("Flujo de alta iniciado para matrícula: " + matricula);
                residente = ((ControlAltaResidente) control).getResidente(matricula);
                if (residente != null) {
                    throw new Exception("El alumno ya se encuentra registrado en residencias, ir a Asignar Habitación");
                }
                residente = ((ControlAltaResidente) control).getEstudianteCIA(matricula);
                if (residente == null) {
                    throw new Exception("No se encontró un estudiante con matrícula " + matricula + " en CIA");
                }
                ((ControlAltaResidente) control).setResidente(residente);
                ((ControlAltaResidente) control).mostrarInfoEstudiante(residente);
            } else if (tipoFormulario == 1) { // Actualizar Residente
                System.out.println("Flujo de actualización iniciado para matrícula: " + matricula);
                residente = ((ControlActualizarResidente) control).consultarResidentePorId(matricula);
                if (residente == null) {
                    throw new Exception("El residente con matrícula " + matricula + " no fue encontrado");
                }
                ((ControlActualizarResidente) control).setResidente(residente);
                ((ControlActualizarResidente) control).mostrarActualizarResidente();
            } else {
                throw new Exception("Error interno: tipoFormulario no válido - " + tipoFormulario);
            }
        } catch (Exception ex) {
            System.out.println("Error en btnObtenerInformacion: " + ex.getMessage());
            JOptionPane.showMessageDialog(
                this,
                "Error: " + ex.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_btnObtenerInformacionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignarHabitaciones;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnObtenerInformacion;
    private javax.swing.JTextField campoTextoID;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel lblIngresaIDEstudiante;
    private javax.swing.JLabel lblLogoCIA;
    private javax.swing.JLabel lblLogoResi;
    private javax.swing.JPanel pnlLinea4;
    // End of variables declaration//GEN-END:variables
}
